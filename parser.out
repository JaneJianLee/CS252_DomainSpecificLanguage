Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> NUMBER
Rule 2     color -> QUOT WRD QUOT
Rule 3     x-coor -> NUMBER
Rule 4     y-coor -> NUMBER
Rule 5     radius -> NUMBER
Rule 6     speed -> WRD
Rule 7     direction -> WRD
Rule 8     expression -> CANVAS expression expression color
Rule 9     expression -> CANVAS expression expression
Rule 10    expression -> LINE x-coor y-coor x-coor y-coor color
Rule 11    expression -> LINE x-coor y-coor x-coor y-coor
Rule 12    expression -> CIRCLE x-coor y-coor radius color
Rule 13    expression -> CIRCLE x-coor y-coor radius
Rule 14    expression -> OVAL x-coor y-coor x-coor y-coor color
Rule 15    expression -> OVAL x-coor y-coor x-coor y-coor
Rule 16    expression -> RECT x-coor y-coor x-coor y-coor color
Rule 17    expression -> RECT x-coor y-coor x-coor y-coor
Rule 18    expression -> TEXT x-coor y-coor WRD
Rule 19    expression -> MOVE speed direction
Rule 20    expression -> IMG expression expression expression expression

Terminals, with rules where they appear

CANVAS               : 8 9
CIRCLE               : 12 13
IMG                  : 20
LINE                 : 10 11
MOVE                 : 19
NUMBER               : 1 3 4 5
OVAL                 : 14 15
QUOT                 : 2 2
RECT                 : 16 17
TEXT                 : 18
WRD                  : 2 6 7 18
error                : 

Nonterminals, with rules where they appear

color                : 8 10 12 14 16
direction            : 19
expression           : 8 8 9 9 20 20 20 20 0
radius               : 12 13
speed                : 19
x-coor               : 10 10 11 11 12 13 14 14 15 15 16 16 17 17 18
y-coor               : 10 10 11 11 12 13 14 14 15 15 16 16 17 17 18

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . NUMBER
    (8) expression -> . CANVAS expression expression color
    (9) expression -> . CANVAS expression expression
    (10) expression -> . LINE x-coor y-coor x-coor y-coor color
    (11) expression -> . LINE x-coor y-coor x-coor y-coor
    (12) expression -> . CIRCLE x-coor y-coor radius color
    (13) expression -> . CIRCLE x-coor y-coor radius
    (14) expression -> . OVAL x-coor y-coor x-coor y-coor color
    (15) expression -> . OVAL x-coor y-coor x-coor y-coor
    (16) expression -> . RECT x-coor y-coor x-coor y-coor color
    (17) expression -> . RECT x-coor y-coor x-coor y-coor
    (18) expression -> . TEXT x-coor y-coor WRD
    (19) expression -> . MOVE speed direction
    (20) expression -> . IMG expression expression expression expression

    NUMBER          shift and go to state 2
    CANVAS          shift and go to state 3
    LINE            shift and go to state 4
    CIRCLE          shift and go to state 5
    OVAL            shift and go to state 6
    RECT            shift and go to state 7
    TEXT            shift and go to state 8
    MOVE            shift and go to state 9
    IMG             shift and go to state 10

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .



state 2

    (1) expression -> NUMBER .

    $end            reduce using rule 1 (expression -> NUMBER .)
    NUMBER          reduce using rule 1 (expression -> NUMBER .)
    CANVAS          reduce using rule 1 (expression -> NUMBER .)
    LINE            reduce using rule 1 (expression -> NUMBER .)
    CIRCLE          reduce using rule 1 (expression -> NUMBER .)
    OVAL            reduce using rule 1 (expression -> NUMBER .)
    RECT            reduce using rule 1 (expression -> NUMBER .)
    TEXT            reduce using rule 1 (expression -> NUMBER .)
    MOVE            reduce using rule 1 (expression -> NUMBER .)
    IMG             reduce using rule 1 (expression -> NUMBER .)
    QUOT            reduce using rule 1 (expression -> NUMBER .)


state 3

    (8) expression -> CANVAS . expression expression color
    (9) expression -> CANVAS . expression expression
    (1) expression -> . NUMBER
    (8) expression -> . CANVAS expression expression color
    (9) expression -> . CANVAS expression expression
    (10) expression -> . LINE x-coor y-coor x-coor y-coor color
    (11) expression -> . LINE x-coor y-coor x-coor y-coor
    (12) expression -> . CIRCLE x-coor y-coor radius color
    (13) expression -> . CIRCLE x-coor y-coor radius
    (14) expression -> . OVAL x-coor y-coor x-coor y-coor color
    (15) expression -> . OVAL x-coor y-coor x-coor y-coor
    (16) expression -> . RECT x-coor y-coor x-coor y-coor color
    (17) expression -> . RECT x-coor y-coor x-coor y-coor
    (18) expression -> . TEXT x-coor y-coor WRD
    (19) expression -> . MOVE speed direction
    (20) expression -> . IMG expression expression expression expression

    NUMBER          shift and go to state 2
    CANVAS          shift and go to state 3
    LINE            shift and go to state 4
    CIRCLE          shift and go to state 5
    OVAL            shift and go to state 6
    RECT            shift and go to state 7
    TEXT            shift and go to state 8
    MOVE            shift and go to state 9
    IMG             shift and go to state 10

    expression                     shift and go to state 11

state 4

    (10) expression -> LINE . x-coor y-coor x-coor y-coor color
    (11) expression -> LINE . x-coor y-coor x-coor y-coor
    (3) x-coor -> . NUMBER

    NUMBER          shift and go to state 13

    x-coor                         shift and go to state 12

state 5

    (12) expression -> CIRCLE . x-coor y-coor radius color
    (13) expression -> CIRCLE . x-coor y-coor radius
    (3) x-coor -> . NUMBER

    NUMBER          shift and go to state 13

    x-coor                         shift and go to state 14

state 6

    (14) expression -> OVAL . x-coor y-coor x-coor y-coor color
    (15) expression -> OVAL . x-coor y-coor x-coor y-coor
    (3) x-coor -> . NUMBER

    NUMBER          shift and go to state 13

    x-coor                         shift and go to state 15

state 7

    (16) expression -> RECT . x-coor y-coor x-coor y-coor color
    (17) expression -> RECT . x-coor y-coor x-coor y-coor
    (3) x-coor -> . NUMBER

    NUMBER          shift and go to state 13

    x-coor                         shift and go to state 16

state 8

    (18) expression -> TEXT . x-coor y-coor WRD
    (3) x-coor -> . NUMBER

    NUMBER          shift and go to state 13

    x-coor                         shift and go to state 17

state 9

    (19) expression -> MOVE . speed direction
    (6) speed -> . WRD

    WRD             shift and go to state 19

    speed                          shift and go to state 18

state 10

    (20) expression -> IMG . expression expression expression expression
    (1) expression -> . NUMBER
    (8) expression -> . CANVAS expression expression color
    (9) expression -> . CANVAS expression expression
    (10) expression -> . LINE x-coor y-coor x-coor y-coor color
    (11) expression -> . LINE x-coor y-coor x-coor y-coor
    (12) expression -> . CIRCLE x-coor y-coor radius color
    (13) expression -> . CIRCLE x-coor y-coor radius
    (14) expression -> . OVAL x-coor y-coor x-coor y-coor color
    (15) expression -> . OVAL x-coor y-coor x-coor y-coor
    (16) expression -> . RECT x-coor y-coor x-coor y-coor color
    (17) expression -> . RECT x-coor y-coor x-coor y-coor
    (18) expression -> . TEXT x-coor y-coor WRD
    (19) expression -> . MOVE speed direction
    (20) expression -> . IMG expression expression expression expression

    NUMBER          shift and go to state 2
    CANVAS          shift and go to state 3
    LINE            shift and go to state 4
    CIRCLE          shift and go to state 5
    OVAL            shift and go to state 6
    RECT            shift and go to state 7
    TEXT            shift and go to state 8
    MOVE            shift and go to state 9
    IMG             shift and go to state 10

    expression                     shift and go to state 20

state 11

    (8) expression -> CANVAS expression . expression color
    (9) expression -> CANVAS expression . expression
    (1) expression -> . NUMBER
    (8) expression -> . CANVAS expression expression color
    (9) expression -> . CANVAS expression expression
    (10) expression -> . LINE x-coor y-coor x-coor y-coor color
    (11) expression -> . LINE x-coor y-coor x-coor y-coor
    (12) expression -> . CIRCLE x-coor y-coor radius color
    (13) expression -> . CIRCLE x-coor y-coor radius
    (14) expression -> . OVAL x-coor y-coor x-coor y-coor color
    (15) expression -> . OVAL x-coor y-coor x-coor y-coor
    (16) expression -> . RECT x-coor y-coor x-coor y-coor color
    (17) expression -> . RECT x-coor y-coor x-coor y-coor
    (18) expression -> . TEXT x-coor y-coor WRD
    (19) expression -> . MOVE speed direction
    (20) expression -> . IMG expression expression expression expression

    NUMBER          shift and go to state 2
    CANVAS          shift and go to state 3
    LINE            shift and go to state 4
    CIRCLE          shift and go to state 5
    OVAL            shift and go to state 6
    RECT            shift and go to state 7
    TEXT            shift and go to state 8
    MOVE            shift and go to state 9
    IMG             shift and go to state 10

    expression                     shift and go to state 21

state 12

    (10) expression -> LINE x-coor . y-coor x-coor y-coor color
    (11) expression -> LINE x-coor . y-coor x-coor y-coor
    (4) y-coor -> . NUMBER

    NUMBER          shift and go to state 23

    y-coor                         shift and go to state 22

state 13

    (3) x-coor -> NUMBER .

    NUMBER          reduce using rule 3 (x-coor -> NUMBER .)


state 14

    (12) expression -> CIRCLE x-coor . y-coor radius color
    (13) expression -> CIRCLE x-coor . y-coor radius
    (4) y-coor -> . NUMBER

    NUMBER          shift and go to state 23

    y-coor                         shift and go to state 24

state 15

    (14) expression -> OVAL x-coor . y-coor x-coor y-coor color
    (15) expression -> OVAL x-coor . y-coor x-coor y-coor
    (4) y-coor -> . NUMBER

    NUMBER          shift and go to state 23

    y-coor                         shift and go to state 25

state 16

    (16) expression -> RECT x-coor . y-coor x-coor y-coor color
    (17) expression -> RECT x-coor . y-coor x-coor y-coor
    (4) y-coor -> . NUMBER

    NUMBER          shift and go to state 23

    y-coor                         shift and go to state 26

state 17

    (18) expression -> TEXT x-coor . y-coor WRD
    (4) y-coor -> . NUMBER

    NUMBER          shift and go to state 23

    y-coor                         shift and go to state 27

state 18

    (19) expression -> MOVE speed . direction
    (7) direction -> . WRD

    WRD             shift and go to state 29

    direction                      shift and go to state 28

state 19

    (6) speed -> WRD .

    WRD             reduce using rule 6 (speed -> WRD .)


state 20

    (20) expression -> IMG expression . expression expression expression
    (1) expression -> . NUMBER
    (8) expression -> . CANVAS expression expression color
    (9) expression -> . CANVAS expression expression
    (10) expression -> . LINE x-coor y-coor x-coor y-coor color
    (11) expression -> . LINE x-coor y-coor x-coor y-coor
    (12) expression -> . CIRCLE x-coor y-coor radius color
    (13) expression -> . CIRCLE x-coor y-coor radius
    (14) expression -> . OVAL x-coor y-coor x-coor y-coor color
    (15) expression -> . OVAL x-coor y-coor x-coor y-coor
    (16) expression -> . RECT x-coor y-coor x-coor y-coor color
    (17) expression -> . RECT x-coor y-coor x-coor y-coor
    (18) expression -> . TEXT x-coor y-coor WRD
    (19) expression -> . MOVE speed direction
    (20) expression -> . IMG expression expression expression expression

    NUMBER          shift and go to state 2
    CANVAS          shift and go to state 3
    LINE            shift and go to state 4
    CIRCLE          shift and go to state 5
    OVAL            shift and go to state 6
    RECT            shift and go to state 7
    TEXT            shift and go to state 8
    MOVE            shift and go to state 9
    IMG             shift and go to state 10

    expression                     shift and go to state 30

state 21

    (8) expression -> CANVAS expression expression . color
    (9) expression -> CANVAS expression expression .
    (2) color -> . QUOT WRD QUOT

  ! shift/reduce conflict for QUOT resolved as shift
    $end            reduce using rule 9 (expression -> CANVAS expression expression .)
    NUMBER          reduce using rule 9 (expression -> CANVAS expression expression .)
    CANVAS          reduce using rule 9 (expression -> CANVAS expression expression .)
    LINE            reduce using rule 9 (expression -> CANVAS expression expression .)
    CIRCLE          reduce using rule 9 (expression -> CANVAS expression expression .)
    OVAL            reduce using rule 9 (expression -> CANVAS expression expression .)
    RECT            reduce using rule 9 (expression -> CANVAS expression expression .)
    TEXT            reduce using rule 9 (expression -> CANVAS expression expression .)
    MOVE            reduce using rule 9 (expression -> CANVAS expression expression .)
    IMG             reduce using rule 9 (expression -> CANVAS expression expression .)
    QUOT            shift and go to state 32

  ! QUOT            [ reduce using rule 9 (expression -> CANVAS expression expression .) ]

    color                          shift and go to state 31

state 22

    (10) expression -> LINE x-coor y-coor . x-coor y-coor color
    (11) expression -> LINE x-coor y-coor . x-coor y-coor
    (3) x-coor -> . NUMBER

    NUMBER          shift and go to state 13

    x-coor                         shift and go to state 33

state 23

    (4) y-coor -> NUMBER .

    NUMBER          reduce using rule 4 (y-coor -> NUMBER .)
    WRD             reduce using rule 4 (y-coor -> NUMBER .)
    QUOT            reduce using rule 4 (y-coor -> NUMBER .)
    $end            reduce using rule 4 (y-coor -> NUMBER .)
    CANVAS          reduce using rule 4 (y-coor -> NUMBER .)
    LINE            reduce using rule 4 (y-coor -> NUMBER .)
    CIRCLE          reduce using rule 4 (y-coor -> NUMBER .)
    OVAL            reduce using rule 4 (y-coor -> NUMBER .)
    RECT            reduce using rule 4 (y-coor -> NUMBER .)
    TEXT            reduce using rule 4 (y-coor -> NUMBER .)
    MOVE            reduce using rule 4 (y-coor -> NUMBER .)
    IMG             reduce using rule 4 (y-coor -> NUMBER .)


state 24

    (12) expression -> CIRCLE x-coor y-coor . radius color
    (13) expression -> CIRCLE x-coor y-coor . radius
    (5) radius -> . NUMBER

    NUMBER          shift and go to state 35

    radius                         shift and go to state 34

state 25

    (14) expression -> OVAL x-coor y-coor . x-coor y-coor color
    (15) expression -> OVAL x-coor y-coor . x-coor y-coor
    (3) x-coor -> . NUMBER

    NUMBER          shift and go to state 13

    x-coor                         shift and go to state 36

state 26

    (16) expression -> RECT x-coor y-coor . x-coor y-coor color
    (17) expression -> RECT x-coor y-coor . x-coor y-coor
    (3) x-coor -> . NUMBER

    NUMBER          shift and go to state 13

    x-coor                         shift and go to state 37

state 27

    (18) expression -> TEXT x-coor y-coor . WRD

    WRD             shift and go to state 38


state 28

    (19) expression -> MOVE speed direction .

    $end            reduce using rule 19 (expression -> MOVE speed direction .)
    NUMBER          reduce using rule 19 (expression -> MOVE speed direction .)
    CANVAS          reduce using rule 19 (expression -> MOVE speed direction .)
    LINE            reduce using rule 19 (expression -> MOVE speed direction .)
    CIRCLE          reduce using rule 19 (expression -> MOVE speed direction .)
    OVAL            reduce using rule 19 (expression -> MOVE speed direction .)
    RECT            reduce using rule 19 (expression -> MOVE speed direction .)
    TEXT            reduce using rule 19 (expression -> MOVE speed direction .)
    MOVE            reduce using rule 19 (expression -> MOVE speed direction .)
    IMG             reduce using rule 19 (expression -> MOVE speed direction .)
    QUOT            reduce using rule 19 (expression -> MOVE speed direction .)


state 29

    (7) direction -> WRD .

    $end            reduce using rule 7 (direction -> WRD .)
    NUMBER          reduce using rule 7 (direction -> WRD .)
    CANVAS          reduce using rule 7 (direction -> WRD .)
    LINE            reduce using rule 7 (direction -> WRD .)
    CIRCLE          reduce using rule 7 (direction -> WRD .)
    OVAL            reduce using rule 7 (direction -> WRD .)
    RECT            reduce using rule 7 (direction -> WRD .)
    TEXT            reduce using rule 7 (direction -> WRD .)
    MOVE            reduce using rule 7 (direction -> WRD .)
    IMG             reduce using rule 7 (direction -> WRD .)
    QUOT            reduce using rule 7 (direction -> WRD .)


state 30

    (20) expression -> IMG expression expression . expression expression
    (1) expression -> . NUMBER
    (8) expression -> . CANVAS expression expression color
    (9) expression -> . CANVAS expression expression
    (10) expression -> . LINE x-coor y-coor x-coor y-coor color
    (11) expression -> . LINE x-coor y-coor x-coor y-coor
    (12) expression -> . CIRCLE x-coor y-coor radius color
    (13) expression -> . CIRCLE x-coor y-coor radius
    (14) expression -> . OVAL x-coor y-coor x-coor y-coor color
    (15) expression -> . OVAL x-coor y-coor x-coor y-coor
    (16) expression -> . RECT x-coor y-coor x-coor y-coor color
    (17) expression -> . RECT x-coor y-coor x-coor y-coor
    (18) expression -> . TEXT x-coor y-coor WRD
    (19) expression -> . MOVE speed direction
    (20) expression -> . IMG expression expression expression expression

    NUMBER          shift and go to state 2
    CANVAS          shift and go to state 3
    LINE            shift and go to state 4
    CIRCLE          shift and go to state 5
    OVAL            shift and go to state 6
    RECT            shift and go to state 7
    TEXT            shift and go to state 8
    MOVE            shift and go to state 9
    IMG             shift and go to state 10

    expression                     shift and go to state 39

state 31

    (8) expression -> CANVAS expression expression color .

    $end            reduce using rule 8 (expression -> CANVAS expression expression color .)
    NUMBER          reduce using rule 8 (expression -> CANVAS expression expression color .)
    CANVAS          reduce using rule 8 (expression -> CANVAS expression expression color .)
    LINE            reduce using rule 8 (expression -> CANVAS expression expression color .)
    CIRCLE          reduce using rule 8 (expression -> CANVAS expression expression color .)
    OVAL            reduce using rule 8 (expression -> CANVAS expression expression color .)
    RECT            reduce using rule 8 (expression -> CANVAS expression expression color .)
    TEXT            reduce using rule 8 (expression -> CANVAS expression expression color .)
    MOVE            reduce using rule 8 (expression -> CANVAS expression expression color .)
    IMG             reduce using rule 8 (expression -> CANVAS expression expression color .)
    QUOT            reduce using rule 8 (expression -> CANVAS expression expression color .)


state 32

    (2) color -> QUOT . WRD QUOT

    WRD             shift and go to state 40


state 33

    (10) expression -> LINE x-coor y-coor x-coor . y-coor color
    (11) expression -> LINE x-coor y-coor x-coor . y-coor
    (4) y-coor -> . NUMBER

    NUMBER          shift and go to state 23

    y-coor                         shift and go to state 41

state 34

    (12) expression -> CIRCLE x-coor y-coor radius . color
    (13) expression -> CIRCLE x-coor y-coor radius .
    (2) color -> . QUOT WRD QUOT

  ! shift/reduce conflict for QUOT resolved as shift
    $end            reduce using rule 13 (expression -> CIRCLE x-coor y-coor radius .)
    NUMBER          reduce using rule 13 (expression -> CIRCLE x-coor y-coor radius .)
    CANVAS          reduce using rule 13 (expression -> CIRCLE x-coor y-coor radius .)
    LINE            reduce using rule 13 (expression -> CIRCLE x-coor y-coor radius .)
    CIRCLE          reduce using rule 13 (expression -> CIRCLE x-coor y-coor radius .)
    OVAL            reduce using rule 13 (expression -> CIRCLE x-coor y-coor radius .)
    RECT            reduce using rule 13 (expression -> CIRCLE x-coor y-coor radius .)
    TEXT            reduce using rule 13 (expression -> CIRCLE x-coor y-coor radius .)
    MOVE            reduce using rule 13 (expression -> CIRCLE x-coor y-coor radius .)
    IMG             reduce using rule 13 (expression -> CIRCLE x-coor y-coor radius .)
    QUOT            shift and go to state 32

  ! QUOT            [ reduce using rule 13 (expression -> CIRCLE x-coor y-coor radius .) ]

    color                          shift and go to state 42

state 35

    (5) radius -> NUMBER .

    QUOT            reduce using rule 5 (radius -> NUMBER .)
    $end            reduce using rule 5 (radius -> NUMBER .)
    NUMBER          reduce using rule 5 (radius -> NUMBER .)
    CANVAS          reduce using rule 5 (radius -> NUMBER .)
    LINE            reduce using rule 5 (radius -> NUMBER .)
    CIRCLE          reduce using rule 5 (radius -> NUMBER .)
    OVAL            reduce using rule 5 (radius -> NUMBER .)
    RECT            reduce using rule 5 (radius -> NUMBER .)
    TEXT            reduce using rule 5 (radius -> NUMBER .)
    MOVE            reduce using rule 5 (radius -> NUMBER .)
    IMG             reduce using rule 5 (radius -> NUMBER .)


state 36

    (14) expression -> OVAL x-coor y-coor x-coor . y-coor color
    (15) expression -> OVAL x-coor y-coor x-coor . y-coor
    (4) y-coor -> . NUMBER

    NUMBER          shift and go to state 23

    y-coor                         shift and go to state 43

state 37

    (16) expression -> RECT x-coor y-coor x-coor . y-coor color
    (17) expression -> RECT x-coor y-coor x-coor . y-coor
    (4) y-coor -> . NUMBER

    NUMBER          shift and go to state 23

    y-coor                         shift and go to state 44

state 38

    (18) expression -> TEXT x-coor y-coor WRD .

    $end            reduce using rule 18 (expression -> TEXT x-coor y-coor WRD .)
    NUMBER          reduce using rule 18 (expression -> TEXT x-coor y-coor WRD .)
    CANVAS          reduce using rule 18 (expression -> TEXT x-coor y-coor WRD .)
    LINE            reduce using rule 18 (expression -> TEXT x-coor y-coor WRD .)
    CIRCLE          reduce using rule 18 (expression -> TEXT x-coor y-coor WRD .)
    OVAL            reduce using rule 18 (expression -> TEXT x-coor y-coor WRD .)
    RECT            reduce using rule 18 (expression -> TEXT x-coor y-coor WRD .)
    TEXT            reduce using rule 18 (expression -> TEXT x-coor y-coor WRD .)
    MOVE            reduce using rule 18 (expression -> TEXT x-coor y-coor WRD .)
    IMG             reduce using rule 18 (expression -> TEXT x-coor y-coor WRD .)
    QUOT            reduce using rule 18 (expression -> TEXT x-coor y-coor WRD .)


state 39

    (20) expression -> IMG expression expression expression . expression
    (1) expression -> . NUMBER
    (8) expression -> . CANVAS expression expression color
    (9) expression -> . CANVAS expression expression
    (10) expression -> . LINE x-coor y-coor x-coor y-coor color
    (11) expression -> . LINE x-coor y-coor x-coor y-coor
    (12) expression -> . CIRCLE x-coor y-coor radius color
    (13) expression -> . CIRCLE x-coor y-coor radius
    (14) expression -> . OVAL x-coor y-coor x-coor y-coor color
    (15) expression -> . OVAL x-coor y-coor x-coor y-coor
    (16) expression -> . RECT x-coor y-coor x-coor y-coor color
    (17) expression -> . RECT x-coor y-coor x-coor y-coor
    (18) expression -> . TEXT x-coor y-coor WRD
    (19) expression -> . MOVE speed direction
    (20) expression -> . IMG expression expression expression expression

    NUMBER          shift and go to state 2
    CANVAS          shift and go to state 3
    LINE            shift and go to state 4
    CIRCLE          shift and go to state 5
    OVAL            shift and go to state 6
    RECT            shift and go to state 7
    TEXT            shift and go to state 8
    MOVE            shift and go to state 9
    IMG             shift and go to state 10

    expression                     shift and go to state 45

state 40

    (2) color -> QUOT WRD . QUOT

    QUOT            shift and go to state 46


state 41

    (10) expression -> LINE x-coor y-coor x-coor y-coor . color
    (11) expression -> LINE x-coor y-coor x-coor y-coor .
    (2) color -> . QUOT WRD QUOT

  ! shift/reduce conflict for QUOT resolved as shift
    $end            reduce using rule 11 (expression -> LINE x-coor y-coor x-coor y-coor .)
    NUMBER          reduce using rule 11 (expression -> LINE x-coor y-coor x-coor y-coor .)
    CANVAS          reduce using rule 11 (expression -> LINE x-coor y-coor x-coor y-coor .)
    LINE            reduce using rule 11 (expression -> LINE x-coor y-coor x-coor y-coor .)
    CIRCLE          reduce using rule 11 (expression -> LINE x-coor y-coor x-coor y-coor .)
    OVAL            reduce using rule 11 (expression -> LINE x-coor y-coor x-coor y-coor .)
    RECT            reduce using rule 11 (expression -> LINE x-coor y-coor x-coor y-coor .)
    TEXT            reduce using rule 11 (expression -> LINE x-coor y-coor x-coor y-coor .)
    MOVE            reduce using rule 11 (expression -> LINE x-coor y-coor x-coor y-coor .)
    IMG             reduce using rule 11 (expression -> LINE x-coor y-coor x-coor y-coor .)
    QUOT            shift and go to state 32

  ! QUOT            [ reduce using rule 11 (expression -> LINE x-coor y-coor x-coor y-coor .) ]

    color                          shift and go to state 47

state 42

    (12) expression -> CIRCLE x-coor y-coor radius color .

    $end            reduce using rule 12 (expression -> CIRCLE x-coor y-coor radius color .)
    NUMBER          reduce using rule 12 (expression -> CIRCLE x-coor y-coor radius color .)
    CANVAS          reduce using rule 12 (expression -> CIRCLE x-coor y-coor radius color .)
    LINE            reduce using rule 12 (expression -> CIRCLE x-coor y-coor radius color .)
    CIRCLE          reduce using rule 12 (expression -> CIRCLE x-coor y-coor radius color .)
    OVAL            reduce using rule 12 (expression -> CIRCLE x-coor y-coor radius color .)
    RECT            reduce using rule 12 (expression -> CIRCLE x-coor y-coor radius color .)
    TEXT            reduce using rule 12 (expression -> CIRCLE x-coor y-coor radius color .)
    MOVE            reduce using rule 12 (expression -> CIRCLE x-coor y-coor radius color .)
    IMG             reduce using rule 12 (expression -> CIRCLE x-coor y-coor radius color .)
    QUOT            reduce using rule 12 (expression -> CIRCLE x-coor y-coor radius color .)


state 43

    (14) expression -> OVAL x-coor y-coor x-coor y-coor . color
    (15) expression -> OVAL x-coor y-coor x-coor y-coor .
    (2) color -> . QUOT WRD QUOT

  ! shift/reduce conflict for QUOT resolved as shift
    $end            reduce using rule 15 (expression -> OVAL x-coor y-coor x-coor y-coor .)
    NUMBER          reduce using rule 15 (expression -> OVAL x-coor y-coor x-coor y-coor .)
    CANVAS          reduce using rule 15 (expression -> OVAL x-coor y-coor x-coor y-coor .)
    LINE            reduce using rule 15 (expression -> OVAL x-coor y-coor x-coor y-coor .)
    CIRCLE          reduce using rule 15 (expression -> OVAL x-coor y-coor x-coor y-coor .)
    OVAL            reduce using rule 15 (expression -> OVAL x-coor y-coor x-coor y-coor .)
    RECT            reduce using rule 15 (expression -> OVAL x-coor y-coor x-coor y-coor .)
    TEXT            reduce using rule 15 (expression -> OVAL x-coor y-coor x-coor y-coor .)
    MOVE            reduce using rule 15 (expression -> OVAL x-coor y-coor x-coor y-coor .)
    IMG             reduce using rule 15 (expression -> OVAL x-coor y-coor x-coor y-coor .)
    QUOT            shift and go to state 32

  ! QUOT            [ reduce using rule 15 (expression -> OVAL x-coor y-coor x-coor y-coor .) ]

    color                          shift and go to state 48

state 44

    (16) expression -> RECT x-coor y-coor x-coor y-coor . color
    (17) expression -> RECT x-coor y-coor x-coor y-coor .
    (2) color -> . QUOT WRD QUOT

  ! shift/reduce conflict for QUOT resolved as shift
    $end            reduce using rule 17 (expression -> RECT x-coor y-coor x-coor y-coor .)
    NUMBER          reduce using rule 17 (expression -> RECT x-coor y-coor x-coor y-coor .)
    CANVAS          reduce using rule 17 (expression -> RECT x-coor y-coor x-coor y-coor .)
    LINE            reduce using rule 17 (expression -> RECT x-coor y-coor x-coor y-coor .)
    CIRCLE          reduce using rule 17 (expression -> RECT x-coor y-coor x-coor y-coor .)
    OVAL            reduce using rule 17 (expression -> RECT x-coor y-coor x-coor y-coor .)
    RECT            reduce using rule 17 (expression -> RECT x-coor y-coor x-coor y-coor .)
    TEXT            reduce using rule 17 (expression -> RECT x-coor y-coor x-coor y-coor .)
    MOVE            reduce using rule 17 (expression -> RECT x-coor y-coor x-coor y-coor .)
    IMG             reduce using rule 17 (expression -> RECT x-coor y-coor x-coor y-coor .)
    QUOT            shift and go to state 32

  ! QUOT            [ reduce using rule 17 (expression -> RECT x-coor y-coor x-coor y-coor .) ]

    color                          shift and go to state 49

state 45

    (20) expression -> IMG expression expression expression expression .

    $end            reduce using rule 20 (expression -> IMG expression expression expression expression .)
    NUMBER          reduce using rule 20 (expression -> IMG expression expression expression expression .)
    CANVAS          reduce using rule 20 (expression -> IMG expression expression expression expression .)
    LINE            reduce using rule 20 (expression -> IMG expression expression expression expression .)
    CIRCLE          reduce using rule 20 (expression -> IMG expression expression expression expression .)
    OVAL            reduce using rule 20 (expression -> IMG expression expression expression expression .)
    RECT            reduce using rule 20 (expression -> IMG expression expression expression expression .)
    TEXT            reduce using rule 20 (expression -> IMG expression expression expression expression .)
    MOVE            reduce using rule 20 (expression -> IMG expression expression expression expression .)
    IMG             reduce using rule 20 (expression -> IMG expression expression expression expression .)
    QUOT            reduce using rule 20 (expression -> IMG expression expression expression expression .)


state 46

    (2) color -> QUOT WRD QUOT .

    $end            reduce using rule 2 (color -> QUOT WRD QUOT .)
    NUMBER          reduce using rule 2 (color -> QUOT WRD QUOT .)
    CANVAS          reduce using rule 2 (color -> QUOT WRD QUOT .)
    LINE            reduce using rule 2 (color -> QUOT WRD QUOT .)
    CIRCLE          reduce using rule 2 (color -> QUOT WRD QUOT .)
    OVAL            reduce using rule 2 (color -> QUOT WRD QUOT .)
    RECT            reduce using rule 2 (color -> QUOT WRD QUOT .)
    TEXT            reduce using rule 2 (color -> QUOT WRD QUOT .)
    MOVE            reduce using rule 2 (color -> QUOT WRD QUOT .)
    IMG             reduce using rule 2 (color -> QUOT WRD QUOT .)
    QUOT            reduce using rule 2 (color -> QUOT WRD QUOT .)


state 47

    (10) expression -> LINE x-coor y-coor x-coor y-coor color .

    $end            reduce using rule 10 (expression -> LINE x-coor y-coor x-coor y-coor color .)
    NUMBER          reduce using rule 10 (expression -> LINE x-coor y-coor x-coor y-coor color .)
    CANVAS          reduce using rule 10 (expression -> LINE x-coor y-coor x-coor y-coor color .)
    LINE            reduce using rule 10 (expression -> LINE x-coor y-coor x-coor y-coor color .)
    CIRCLE          reduce using rule 10 (expression -> LINE x-coor y-coor x-coor y-coor color .)
    OVAL            reduce using rule 10 (expression -> LINE x-coor y-coor x-coor y-coor color .)
    RECT            reduce using rule 10 (expression -> LINE x-coor y-coor x-coor y-coor color .)
    TEXT            reduce using rule 10 (expression -> LINE x-coor y-coor x-coor y-coor color .)
    MOVE            reduce using rule 10 (expression -> LINE x-coor y-coor x-coor y-coor color .)
    IMG             reduce using rule 10 (expression -> LINE x-coor y-coor x-coor y-coor color .)
    QUOT            reduce using rule 10 (expression -> LINE x-coor y-coor x-coor y-coor color .)


state 48

    (14) expression -> OVAL x-coor y-coor x-coor y-coor color .

    $end            reduce using rule 14 (expression -> OVAL x-coor y-coor x-coor y-coor color .)
    NUMBER          reduce using rule 14 (expression -> OVAL x-coor y-coor x-coor y-coor color .)
    CANVAS          reduce using rule 14 (expression -> OVAL x-coor y-coor x-coor y-coor color .)
    LINE            reduce using rule 14 (expression -> OVAL x-coor y-coor x-coor y-coor color .)
    CIRCLE          reduce using rule 14 (expression -> OVAL x-coor y-coor x-coor y-coor color .)
    OVAL            reduce using rule 14 (expression -> OVAL x-coor y-coor x-coor y-coor color .)
    RECT            reduce using rule 14 (expression -> OVAL x-coor y-coor x-coor y-coor color .)
    TEXT            reduce using rule 14 (expression -> OVAL x-coor y-coor x-coor y-coor color .)
    MOVE            reduce using rule 14 (expression -> OVAL x-coor y-coor x-coor y-coor color .)
    IMG             reduce using rule 14 (expression -> OVAL x-coor y-coor x-coor y-coor color .)
    QUOT            reduce using rule 14 (expression -> OVAL x-coor y-coor x-coor y-coor color .)


state 49

    (16) expression -> RECT x-coor y-coor x-coor y-coor color .

    $end            reduce using rule 16 (expression -> RECT x-coor y-coor x-coor y-coor color .)
    NUMBER          reduce using rule 16 (expression -> RECT x-coor y-coor x-coor y-coor color .)
    CANVAS          reduce using rule 16 (expression -> RECT x-coor y-coor x-coor y-coor color .)
    LINE            reduce using rule 16 (expression -> RECT x-coor y-coor x-coor y-coor color .)
    CIRCLE          reduce using rule 16 (expression -> RECT x-coor y-coor x-coor y-coor color .)
    OVAL            reduce using rule 16 (expression -> RECT x-coor y-coor x-coor y-coor color .)
    RECT            reduce using rule 16 (expression -> RECT x-coor y-coor x-coor y-coor color .)
    TEXT            reduce using rule 16 (expression -> RECT x-coor y-coor x-coor y-coor color .)
    MOVE            reduce using rule 16 (expression -> RECT x-coor y-coor x-coor y-coor color .)
    IMG             reduce using rule 16 (expression -> RECT x-coor y-coor x-coor y-coor color .)
    QUOT            reduce using rule 16 (expression -> RECT x-coor y-coor x-coor y-coor color .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for QUOT in state 21 resolved as shift
WARNING: shift/reduce conflict for QUOT in state 34 resolved as shift
WARNING: shift/reduce conflict for QUOT in state 41 resolved as shift
WARNING: shift/reduce conflict for QUOT in state 43 resolved as shift
WARNING: shift/reduce conflict for QUOT in state 44 resolved as shift
