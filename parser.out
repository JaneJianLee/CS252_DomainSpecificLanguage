Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> CANVAS LBRACE expression COMMA expression RBRACE NEWLINE
Rule 2     expression -> NUMBER
Rule 3     expression -> LINE LBRACE expression COMMA expression COMMA expression COMMA expression COMMA expression RBRACE NEWLINE

Terminals, with rules where they appear

CANVAS               : 1
COMMA                : 1 3 3 3 3
LBRACE               : 1 3
LINE                 : 3
NEWLINE              : 1 3
NUMBER               : 2
RBRACE               : 1 3
error                : 

Nonterminals, with rules where they appear

expression           : 1 1 3 3 3 3 3 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . CANVAS LBRACE expression COMMA expression RBRACE NEWLINE
    (2) expression -> . NUMBER
    (3) expression -> . LINE LBRACE expression COMMA expression COMMA expression COMMA expression COMMA expression RBRACE NEWLINE

    CANVAS          shift and go to state 2
    NUMBER          shift and go to state 3
    LINE            shift and go to state 4

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .



state 2

    (1) expression -> CANVAS . LBRACE expression COMMA expression RBRACE NEWLINE

    LBRACE          shift and go to state 5


state 3

    (2) expression -> NUMBER .

    $end            reduce using rule 2 (expression -> NUMBER .)
    COMMA           reduce using rule 2 (expression -> NUMBER .)
    RBRACE          reduce using rule 2 (expression -> NUMBER .)


state 4

    (3) expression -> LINE . LBRACE expression COMMA expression COMMA expression COMMA expression COMMA expression RBRACE NEWLINE

    LBRACE          shift and go to state 6


state 5

    (1) expression -> CANVAS LBRACE . expression COMMA expression RBRACE NEWLINE
    (1) expression -> . CANVAS LBRACE expression COMMA expression RBRACE NEWLINE
    (2) expression -> . NUMBER
    (3) expression -> . LINE LBRACE expression COMMA expression COMMA expression COMMA expression COMMA expression RBRACE NEWLINE

    CANVAS          shift and go to state 2
    NUMBER          shift and go to state 3
    LINE            shift and go to state 4

    expression                     shift and go to state 7

state 6

    (3) expression -> LINE LBRACE . expression COMMA expression COMMA expression COMMA expression COMMA expression RBRACE NEWLINE
    (1) expression -> . CANVAS LBRACE expression COMMA expression RBRACE NEWLINE
    (2) expression -> . NUMBER
    (3) expression -> . LINE LBRACE expression COMMA expression COMMA expression COMMA expression COMMA expression RBRACE NEWLINE

    CANVAS          shift and go to state 2
    NUMBER          shift and go to state 3
    LINE            shift and go to state 4

    expression                     shift and go to state 8

state 7

    (1) expression -> CANVAS LBRACE expression . COMMA expression RBRACE NEWLINE

    COMMA           shift and go to state 9


state 8

    (3) expression -> LINE LBRACE expression . COMMA expression COMMA expression COMMA expression COMMA expression RBRACE NEWLINE

    COMMA           shift and go to state 10


state 9

    (1) expression -> CANVAS LBRACE expression COMMA . expression RBRACE NEWLINE
    (1) expression -> . CANVAS LBRACE expression COMMA expression RBRACE NEWLINE
    (2) expression -> . NUMBER
    (3) expression -> . LINE LBRACE expression COMMA expression COMMA expression COMMA expression COMMA expression RBRACE NEWLINE

    CANVAS          shift and go to state 2
    NUMBER          shift and go to state 3
    LINE            shift and go to state 4

    expression                     shift and go to state 11

state 10

    (3) expression -> LINE LBRACE expression COMMA . expression COMMA expression COMMA expression COMMA expression RBRACE NEWLINE
    (1) expression -> . CANVAS LBRACE expression COMMA expression RBRACE NEWLINE
    (2) expression -> . NUMBER
    (3) expression -> . LINE LBRACE expression COMMA expression COMMA expression COMMA expression COMMA expression RBRACE NEWLINE

    CANVAS          shift and go to state 2
    NUMBER          shift and go to state 3
    LINE            shift and go to state 4

    expression                     shift and go to state 12

state 11

    (1) expression -> CANVAS LBRACE expression COMMA expression . RBRACE NEWLINE

    RBRACE          shift and go to state 13


state 12

    (3) expression -> LINE LBRACE expression COMMA expression . COMMA expression COMMA expression COMMA expression RBRACE NEWLINE

    COMMA           shift and go to state 14


state 13

    (1) expression -> CANVAS LBRACE expression COMMA expression RBRACE . NEWLINE

    NEWLINE         shift and go to state 15


state 14

    (3) expression -> LINE LBRACE expression COMMA expression COMMA . expression COMMA expression COMMA expression RBRACE NEWLINE
    (1) expression -> . CANVAS LBRACE expression COMMA expression RBRACE NEWLINE
    (2) expression -> . NUMBER
    (3) expression -> . LINE LBRACE expression COMMA expression COMMA expression COMMA expression COMMA expression RBRACE NEWLINE

    CANVAS          shift and go to state 2
    NUMBER          shift and go to state 3
    LINE            shift and go to state 4

    expression                     shift and go to state 16

state 15

    (1) expression -> CANVAS LBRACE expression COMMA expression RBRACE NEWLINE .

    $end            reduce using rule 1 (expression -> CANVAS LBRACE expression COMMA expression RBRACE NEWLINE .)
    COMMA           reduce using rule 1 (expression -> CANVAS LBRACE expression COMMA expression RBRACE NEWLINE .)
    RBRACE          reduce using rule 1 (expression -> CANVAS LBRACE expression COMMA expression RBRACE NEWLINE .)


state 16

    (3) expression -> LINE LBRACE expression COMMA expression COMMA expression . COMMA expression COMMA expression RBRACE NEWLINE

    COMMA           shift and go to state 17


state 17

    (3) expression -> LINE LBRACE expression COMMA expression COMMA expression COMMA . expression COMMA expression RBRACE NEWLINE
    (1) expression -> . CANVAS LBRACE expression COMMA expression RBRACE NEWLINE
    (2) expression -> . NUMBER
    (3) expression -> . LINE LBRACE expression COMMA expression COMMA expression COMMA expression COMMA expression RBRACE NEWLINE

    CANVAS          shift and go to state 2
    NUMBER          shift and go to state 3
    LINE            shift and go to state 4

    expression                     shift and go to state 18

state 18

    (3) expression -> LINE LBRACE expression COMMA expression COMMA expression COMMA expression . COMMA expression RBRACE NEWLINE

    COMMA           shift and go to state 19


state 19

    (3) expression -> LINE LBRACE expression COMMA expression COMMA expression COMMA expression COMMA . expression RBRACE NEWLINE
    (1) expression -> . CANVAS LBRACE expression COMMA expression RBRACE NEWLINE
    (2) expression -> . NUMBER
    (3) expression -> . LINE LBRACE expression COMMA expression COMMA expression COMMA expression COMMA expression RBRACE NEWLINE

    CANVAS          shift and go to state 2
    NUMBER          shift and go to state 3
    LINE            shift and go to state 4

    expression                     shift and go to state 20

state 20

    (3) expression -> LINE LBRACE expression COMMA expression COMMA expression COMMA expression COMMA expression . RBRACE NEWLINE

    RBRACE          shift and go to state 21


state 21

    (3) expression -> LINE LBRACE expression COMMA expression COMMA expression COMMA expression COMMA expression RBRACE . NEWLINE

    NEWLINE         shift and go to state 22


state 22

    (3) expression -> LINE LBRACE expression COMMA expression COMMA expression COMMA expression COMMA expression RBRACE NEWLINE .

    $end            reduce using rule 3 (expression -> LINE LBRACE expression COMMA expression COMMA expression COMMA expression COMMA expression RBRACE NEWLINE .)
    COMMA           reduce using rule 3 (expression -> LINE LBRACE expression COMMA expression COMMA expression COMMA expression COMMA expression RBRACE NEWLINE .)
    RBRACE          reduce using rule 3 (expression -> LINE LBRACE expression COMMA expression COMMA expression COMMA expression COMMA expression RBRACE NEWLINE .)

